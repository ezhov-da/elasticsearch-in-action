
# Вложенный тип — это специализированная форма типа объекта, 
# которая поддерживает связь между массивами объектов в документе.

# Вложенный тип данных хорош для соблюдения ассоциаций и отношений. 
# Если вам когда-нибудь понадобится создать массив объектов, 
# каждый из которых должен рассматриваться как отдельный объект, 
# вложенный тип данных может стать вашим другом.

# Удаление индексов --------------------------
### 
DELETE {{baseUrl}}/123
Authorization: {{auth}}
content-type: application/json
# --------------------------------------------

###
PUT {{baseUrl}}/123
Authorization: {{auth}}
content-type: application/json

{
    "mappings":{
        "properties": {
            "to": { "type": "keyword"},
            "subject": { "type": "text"},
            "attachments": { 
                "type": "nested",
                "properties": {
                    "filename":{ "type":"keyword" },
                    "filetype":{ "type":"text" }
               } 
            }
        }
    }
}

### 
PUT {{baseUrl}}/123/_doc/2
Authorization: {{auth}}
content-type: application/json

{
    "to":"johndoe@johndoe.com",
    "subject":"Testing Object Type",
    "attachments":[
        {
            "filename":"file2.txt",
            "filetype":"confidential"
        },
        {
            "filename":"file3.txt",
            "filetype":"private"
        }
    ]
}

### 
GET {{baseUrl}}/123/_mapping
Authorization: {{auth}}
content-type: application/json

### 
GET {{baseUrl}}/123/_search
Authorization: {{auth}}
content-type: application/json

{
    "query": {
        "match": {
           "attachments.filename": "file2.txt"
        }
    }
}

### 
# !!! Будет найден наш документ, но это неправильно, так как такого соответствия нет.
# Это происходит, так как объекты схлопываются и превращаются в:
# "attachments.filename" :["file1.txt","file2.txt","file3.txt"]
# "attachments.filetype":["private","confidential"]
# Из такого хранения невозможно понять что к чему относится, так 
# как по сути это всё на всё.
# Данную проблему решает nested тип
GET {{baseUrl}}/123/_search
Authorization: {{auth}}
content-type: application/json

{
    "query": {
        "nested": {
            "path": "attachments",
            "query": {
                "bool": {
                    "must": [
                        {"match": { "attachments.filename": "file2.txt"}},
                        {"match": { "attachments.filetype": "private" }}
                    ]
                }
            }
        }
    }
}
