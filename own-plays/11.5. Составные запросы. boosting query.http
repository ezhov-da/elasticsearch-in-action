###
# Иногда нам нужны предвзятые ответы. Например, мы можем 
# захотеть, чтобы в списке результатов телевизоры LG 
# были наверху, а Sony внизу. Такая предвзятая манипуляция 
# оценкой, чтобы в списке были избранные элементы наверху, 
# выполняется с помощью запроса с повышением. Запрос 
# с повышением работает с двумя наборами запросов: положительной 
# частью, где любое количество запросов дает положительное 
# совпадение; и отрицательной частью, которая сопоставляет 
# запросы, чтобы свести оценку на нет с отрицательным 
# повышением. 
GET {{baseUrl}}/products/_search
Authorization: {{auth}}
content-type: application/json

{
    "size": 50,
    "_source": [
        "product",
        "price",
        "colour"
    ],
    "query": {
        "boosting": {
            "positive": {
                "term": {
                    "product": "tv"
                }
            },
            "negative": {
                "range": {
                    "price": {
                        "gte": 2500
                    }
                }
            },
            "negative_boost": 0.5
        }
    }
}

###
# Мы также можем написать составной запрос, например, 
# запрос повышения с другими составными запросами. Мы 
# можем объявить запрос повышения с помощью bool, constant_score 
# или других составных запросов, включая листовые запросы 
# верхнего уровня. Запрос в следующем листинге показывает 
# это: запрос повышения со встроенными запросами bool. 
GET {{baseUrl}}/products/_search
Authorization: {{auth}}
content-type: application/json

{
    "size": 40,
    "_source": [
        "product",
        "price",
        "colour",
        "brand"
    ],
    "query": {
        "boosting": {
            "positive": {
                "bool": {
                    "must": [
                        {
                            "match": {
                                "product": "TV"
                            }
                        }
                    ]
                }
            },
            "negative": {
                "bool": {
                    "must": [
                        {
                            "match": {
                                "brand": "Sony"
                            }
                        }
                    ]
                }
            },
            "negative_boost": 0.5
        }
    }
}