###
# Мы также можем комбинировать функции, 
# чтобы получить еще лучшую оценку. Например, следующий 
# листинг показывает запрос function_score, который выдает 
# оценку, используя две функции: weight и field_value_factor. 

# Чем больше функций совпадает, тем больше увеличивается 
# итоговое значение оценки. Таким образом, документ может 
# оказаться в верхней части списка. 

# Режимы оценки функций 
# Вы заметили поля score_mode и 
# boost_mode в конце скрипта? Эти два атрибута запроса 
# function_score позволяют нам получить объединенную 
# оценку из исходного запроса и оценки, выданной одной 
# или несколькими функциями. По умолчанию оценки, выданные 
# этими функциями, умножаются для получения единой окончательной 
# оценки. Однако мы можем изменить это поведение, установив 
# атрибут score_mode в запросе function_score. Атрибут 
# score_mode определяет, как вычисляются отдельные оценки. 
# Например, если score_mode запроса установлен на сумму, 
# все оценки, выданные отдельными функциями, суммируются. 
# Атрибут score_mode может быть любым режимом, например, 
# умножение (по умолчанию), сумма, средн., макс., мин. 
# или первый. Оценка этих функций затем будет добавлена 
# ​​(или умножена, или усреднена и т. д.) к исходной 
# оценке запроса (в примере это запрос термина, который 
# находит телевизоры) из документа на основе параметра 
# boost_mode. Параметр boost_mode может быть умножен 
# (по умолчанию), min, max, replace, avg или sum. Чтобы 
# узнать больше о режимах и механике, задействованной 
# в оценке функций, обратитесь к официальной документации 
# Elasticsearch. 
GET {{baseUrl}}/products/_search
Authorization: {{auth}}
content-type: application/json

{
    "query": {
        "function_score": {
            "query": {
                "term": {
                    "product": "TV"
                }
            },
            "functions": [
                {
                    "filter": {
                        "term": {
                            "brand": "LG"
                        }
                    },
                    "weight": 3
                },
                {
                    "filter": {
                        "range": {
                            "user_ratings": {
                                "gte": 4.5,
                                "lte": 5
                            }
                        }
                    },
                    "field_value_factor": {
                        "field": "user_ratings",
                        "factor": 5,
                        "modifier": "square"
                    }
                }
            ],
            "score_mode": "avg",
            "boost_mode": "sum"
        }
    }
}
